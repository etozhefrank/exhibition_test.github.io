{"version":3,"sources":["video/iceland.mp4","store.js","components/Text.js","diamonds/BackfaceMaterial.js","diamonds/RefractionMaterial.js","blocks.js","diamonds/Diamonds.js","components/CustomMaterial.js","components/Plane.js","index.js"],"names":["module","exports","state","sections","pages","zoom","buttons","offset","factor","image","href","paragraphs","pos","Vector3","header","aspect","text","button","stripes","color","height","diamonds","x","scale","top","createRef","Text","children","size","left","right","bottom","opacity","layers","font","props","data","useLoader","FontLoader","geom","usePromise","Promise","res","TextBufferGeometry","curveSegments","onUpdate","useCallback","self","box","geometry","computeBoundingBox","boundingBox","getSize","position","y","ref","useRef","last","current","useFrame","shift","lerp","frustumCulled","attach","transparent","MultilineText","lineHeight","split","map","index","key","BackfaceMaterial","ShaderMaterial","constructor","super","vertexShader","fragmentShader","side","BackSide","RefractionMaterial","options","uniforms","envMap","value","backfaceMap","resolution","offsetContext","createContext","Block","useBlock","parentOffset","sectionHeight","undefined","curY","curTop","Provider","useThree","viewport","useContext","viewportWidth","width","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor","dummy","Object3D","Diamonds","gltf","GLTFLoader","useMemo","scene","center","gl","camera","clock","model","ratio","getPixelRatio","envFbo","WebGLRenderTarget","backfaceFbo","texture","backfaceMaterial","refractionMaterial","forEach","i","t","getElapsedTime","s","set","copy","length","rotation","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","autoClear","setRenderTarget","clearColor","render","clearDepth","material","args","__$","CustomMaterial","hasTexture","Color","this","extend","Plane","forwardRef","Startup","Paragraph","w","alignRight","pixelWidth","style","textAlign","Content","images","TextureLoader","minFilter","LinearFilter","Math","PI","className","App","scrollArea","onScroll","e","target","scrollTop","useEffect","concurrent","pixelRatio","orthographic","fallback","autoPlay","loop","muted","objectFit","transform","zIndex","transition","src","Powerslap","type","id","url","allowFullScreen","Array","fill","_","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.99588e58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iceland.e3de665b.mp4\";","import { createRef } from \"react\"\nimport { Vector3 } from \"three\"\n\nconst state = {\n  sections: 6,\n  pages: 6,\n  zoom: 90,\n  buttons: [\n    {\n      offset: 2.5,\n      factor: 1.75,\n      image: \"/photo-1515036551567-bf1198cccc35.jpeg\",\n      href: \"google.com\"\n    }\n  ],\n  paragraphs: [\n    {\n      pos: new Vector3(),\n      offset: .87,\n      factor: 1.15,\n      header: \"The concept\",\n      image: \"AREX.png\",\n      aspect: 1.91,\n      text: \"Развитие компьютерной мысли привело к диджитализации искусства. Цифровые объекты отныне открыты любому человеку благодаря эффективной широкодоступности, т.к. миллиарды владельцев смартфоном существуют буквально. Таким образом, если вы физически не можете попасть в тот или иной музей, отправляйтесь в виртуальный тур, чтобы во всех подробностях рассмотреть объекты искусства.\"\n    },\n    {\n      offset: 1.88,\n      factor: 2,\n      header: \"ARG & a l e s h a\",\n      image: \"/photo-1519608487953-e999c86e7455.jpeg\",\n      aspect: 3,\n      text:\n        \"Выставка «Удобно» была реализована совместно со стрит-арт художником a l e s h a. Данный проект — виртуальная выставка с работами в формате digital art. Все они созданы во время карантина, в качестве моделей выбраны люди запертые в одном пространстве. Помимо приложения, данную реэкспозицию можно будет увидеть в пространстве Галереи Современного Искусства. Для просмотра достаточно скачать бесплатное приложение (iOS / Android) и начать «прогулку» по комнатам.\"\n    },\n    {\n      offset: 2.9,\n      factor: 1.3,\n      header: \"About us\",\n      image: \"/ph1.jpg\",\n      aspect: 1.5037,\n      text:\n        \"Команда ARG выступает в качестве технического посредника. В наши обязанности входит проецирование художественного образа посредством 3D-визуализации и последующего преобразования в дополненную и виртуальную реальность.\",\n      button: \"appstore\"\n    },\n  ],\n  stripes: [\n    { offset: 2, color: \"#000\", height: 18 },\n    { offset: 5, color: \"#000\", height: 20 }\n  ],\n  diamonds: [\n    { x: 0, offset: 0.15, pos: new Vector3(), scale: 0.7, factor: 1.6 },\n    { x: 2, offset: 1.1, pos: new Vector3(), scale: 0.8, factor: 2.1 },\n    { x: -5, offset: 2, pos: new Vector3(), scale: 0.8, factor: 2.5 },\n    { x: 0, offset: 3, pos: new Vector3(), scale: 0.8, factor: 1.75 },\n    { x: 2, offset: 5.1, pos: new Vector3(), scale: 1.25, factor: 0.85 },\n    { x: 0, offset: 20, pos: new Vector3(), scale: 1.5, factor: 6 }\n  ],\n  top: createRef()\n}\n\nexport default state\n","import { FontLoader, Vector3, TextBufferGeometry } from \"three\"\nimport React, { useCallback, useRef } from \"react\"\nimport { useLoader, useFrame } from \"react-three-fiber\"\nimport usePromise from \"react-promise-suspense\"\nimport lerp from \"lerp\"\nimport state from \"../store\"\n\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\n  const data = useLoader(FontLoader, font)\n  const geom = usePromise(() => new Promise(res => res(new TextBufferGeometry(children, { font: data, size: 1, height, curveSegments: 32 }))), [children])\n  const onUpdate = useCallback(\n    self => {\n      const box = new Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(box)\n      self.position.x = left ? 0 : right ? -box.x : -box.x / 2\n      self.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\n    },\n    [left, right, top, bottom]\n  )\n\n  const ref = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    ref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 200, 0.1)\n    last = state.top.current\n  })\n\n  return (\n    <group {...props} scale={[size, size, 0.1]}>\n      <mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n        <customMaterial ref={ref} attach=\"material\" color={color} transparent opacity={opacity} />\n      </mesh>\n    </group>\n  )\n}\n\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\n  text.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\n\nexport { Text, MultilineText }\n","import { ShaderMaterial, BackSide } from \"three\"\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n      }`,\n      side: BackSide\n    })\n  }\n}\n","import { ShaderMaterial } from \"three\"\n\nexport default class RefractionMaterial extends ShaderMaterial {\n  constructor(options) {\n    super({\n      vertexShader: `varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n      fragmentShader: `uniform sampler2D envMap;\n      uniform sampler2D backfaceMap;\n      uniform vec2 resolution;\n      varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\n      }\n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/1.5).xy);\n        //gl_FragColor = vec4(mix(color.rgb, vec3(0.15), fresnelFunc(viewDirection, normal)), 1.0);\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.4), fresnelFunc(viewDirection, normal)), 1.0);\n      }`,\n      uniforms: {\n        envMap: { value: options.envMap },\n        backfaceMap: { value: options.backfaceMap },\n        resolution: { value: options.resolution }\n      }\n    })\n  }\n}\n","import React, { createContext, useRef, useContext } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, ...props }) {\n  const { offset: parentOffset, sectionHeight } = useBlock()\n  const ref = useRef()\n  offset = offset !== undefined ? offset : parentOffset\n  useFrame(() => {\n    const curY = ref.current.position.y\n    const curTop = state.top.current\n    ref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n  })\n  return (\n    <offsetContext.Provider value={offset}>\n      <group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n        <group ref={ref}>{children}</group>\n      </group>\n    </offsetContext.Provider>\n  )\n}\n\nfunction useBlock() {\n  const { sections, pages, zoom } = state\n  const { size, viewport } = useThree()\n  const offset = useContext(offsetContext)\n  const viewportWidth = viewport.width\n  const viewportHeight = viewport.height\n  const canvasWidth = viewportWidth / zoom\n  const canvasHeight = viewportHeight / zoom\n  const mobile = size.width < 700\n  const margin = canvasWidth * (mobile ? 0.2 : 0.1)\n  const contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n  const sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n  const offsetFactor = (offset + 1.0) / sections\n  return {\n    viewport,\n    offset,\n    viewportWidth,\n    viewportHeight,\n    canvasWidth,\n    canvasHeight,\n    mobile,\n    margin,\n    contentMaxWidth,\n    sectionHeight,\n    offsetFactor\n  }\n}\n\nexport { Block, useBlock }\n","import { WebGLRenderTarget, Object3D } from \"three\"\nimport React, { useRef, useMemo } from \"react\"\nimport { useLoader, useThree, useFrame } from \"react-three-fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport lerp from \"lerp\"\nimport BackfaceMaterial from \"./BackfaceMaterial\"\nimport RefractionMaterial from \"./RefractionMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst dummy = new Object3D()\nexport default function Diamonds() {\n  const gltf = useLoader(GLTFLoader, \"/blocks.glb\")\n  useMemo(() => gltf.scene.children[0].geometry.center(), [])\n\n  const { size, gl, scene, camera, clock } = useThree()\n  const { contentMaxWidth, sectionHeight, mobile } = useBlock()\n  const model = useRef()\n  const ratio = gl.getPixelRatio()\n\n  const [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\n    const envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n    const backfaceMaterial = new BackfaceMaterial()\n    const refractionMaterial = new RefractionMaterial({\n      envMap: envFbo.texture,\n      backfaceMap: backfaceFbo.texture,\n      resolution: [size.width * ratio, size.height * ratio]\n    })\n    return [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\n  }, [size, ratio])\n\n  useFrame(() => {\n    state.diamonds.forEach((data, i) => {\n      const t = clock.getElapsedTime() / 2\n      const { x, offset, scale, factor } = data\n      const s = (contentMaxWidth / 35) * scale\n      data.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), 0)\n      dummy.position.copy(data.pos)\n      if (i === state.diamonds.length - 1) dummy.rotation.set(0, t, 0)\n      else dummy.rotation.set(t, t, t)\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      model.current.setMatrixAt(i, dummy.matrix)\n      model.current.instanceMatrix.needsUpdate = true\n    })\n\n    gl.autoClear = false\n    camera.layers.set(0)\n    gl.setRenderTarget(envFbo)\n    gl.clearColor()\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = backfaceMaterial\n    gl.setRenderTarget(backfaceFbo)\n    gl.clearDepth()\n    gl.render(scene, camera)\n    camera.layers.set(0)\n    gl.setRenderTarget(null)\n    gl.render(scene, camera)\n    gl.clearDepth()\n    camera.layers.set(1)\n    model.current.material = refractionMaterial\n    gl.render(scene, camera)\n  }, 1)\n\n  return (\n    <instancedMesh ref={model} layers={1} args={[null, null, state.diamonds.length]} position={[0, 0, 50]}>\n      <bufferGeometry attach=\"geometry\" {...gltf.__$[1].geometry} />\n    </instancedMesh>\n  )\n}\n","import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"react-three-fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      vertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 5.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n      fragmentShader: `uniform sampler2D texture;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(texture, p + offset);\n        vec4 cga = texture2D(texture, p);\n        vec4 cb = texture2D(texture, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n      uniforms: {\n        texture: { value: null },\n        hasTexture: { value: 0 },\n        scale: { value: 0 },\n        shift: { value: 0 },\n        opacity: { value: 1 },\n        color: { value: new Color(\"white\") }\n      }\n    })\n  }\n\n  set scale(value) {\n    this.uniforms.scale.value = value\n  }\n\n  get scale() {\n    return this.uniforms.scale.value\n  }\n\n  set shift(value) {\n    this.uniforms.shift.value = value\n  }\n\n  get shift() {\n    return this.uniforms.shift.value\n  }\n\n  set map(value) {\n    this.uniforms.hasTexture.value = !!value\n    this.uniforms.texture.value = value\n  }\n\n  get map() {\n    return this.uniforms.texture.value\n  }\n\n  get color() {\n    return this.uniforms.color.value\n  }\n\n  get opacity() {\n    return this.uniforms.opacity.value\n  }\n\n  set opacity(value) {\n    if (this.uniforms) this.uniforms.opacity.value = value\n  }\n}\n\nextend({ CustomMaterial })\n","import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n  const { viewportHeight, offsetFactor } = useBlock()\n  const material = useRef()\n  let last = state.top.current\n  useFrame(() => {\n    const { pages, top } = state\n    material.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n    material.current.shift = lerp(material.current.shift, (top.current - last) / shift, 0.1)\n    last = top.current\n  })\n  return (\n    <mesh ref={ref} {...props}>\n      <planeBufferGeometry attach=\"geometry\" args={args} />\n      <customMaterial ref={material} attach=\"material\" color={color} map={map} transparent opacity={opacity} />\n    </mesh>\n  )\n})\n\nexport default Plane\n","import ReactDOM from \"react-dom\"\nimport React, { Suspense, useEffect, useRef, useMemo } from \"react\"\nimport { Canvas, Dom, useLoader, useFrame } from \"react-three-fiber\"\nimport { TextureLoader, LinearFilter, RGBADepthPacking } from \"three\"\nimport lerp from \"lerp\"\nimport { Text, MultilineText } from \"./components/Text\"\nimport Diamonds from \"./diamonds/Diamonds\"\nimport Plane from \"./components/Plane\"\nimport { Block, useBlock } from \"./blocks\"\nimport state from \"./store\"\nimport \"./styles.css\"\nimport Powerslap from \"./video/iceland.mp4\"\nimport PropTypes from \"prop-types\"\nimport classNames from \"classnames\"\nimport { Button } from \"./button\"\nimport Iframe from \"react-iframe\";\nimport ResponsiveEmbed from 'react-bootstrap/ResponsiveEmbed'\n\nfunction Startup() {\n  const ref = useRef()\n  useFrame(() => (ref.current.material.opacity = lerp(ref.current.material.opacity, 0, 0.025)))\n  return <Plane ref={ref} color=\"#0e0e0f\" position={[0, 0, 200]} scale={[100, 100, 1]} />\n}\n\nfunction Paragraph({ image, index, offset, factor, header, aspect, text }) {\n  const { contentMaxWidth: w, canvasWidth, margin, mobile } = useBlock()\n  const size = aspect < 1 && !mobile ? 0.65 : 1\n  const alignRight = (canvasWidth - w * size - margin) / 2\n  const pixelWidth = w * state.zoom * size\n  const left = !(index % 2)\n  const color = index % 2 ? \"#D40749\" : \"#2FE8C3\"\n  return (\n    <Block factor={factor} offset={offset}>\n      <group position={[left ? -alignRight : alignRight, 0, 0]}>\n        <Plane map={image} args={[1, 1, 32, 32]} shift={200} size={size} aspect={aspect} scale={[w * size, (w * size) / aspect, 1]} frustumCulled={false} />\n        <Dom\n          style={{ width: pixelWidth / (mobile ? 1 : 2), textAlign: left ? \"left\" : \"right\" }}\n          position={[left || mobile ? (-w * size) / 2 : 0, (-w * size) / 2 / aspect - 0.4, 1]}>\n          {text}\n        </Dom>\n        <Text left={left} right={!left} size={w * 0.04} color={color} top position={[((left ? -w : w) * size) / 2, (w * size) / aspect / 2 + 0.5, -1]}>\n          {header}\n        </Text>\n        <Block factor={0.2}>\n          <Text opacity={0.5} size={w * 0.1} color=\"#1A1E2A\" position={[((left ? w : -w) / 2) * size, (w * size) / aspect / 1.5, -10]}>\n            {\"0\" + (index + 1)}\n          </Text>\n        </Block>\n      </group>\n    </Block>\n  )\n}\n\nfunction Content() {\n  const images = useLoader(\n    TextureLoader,\n    state.paragraphs.map(({ image }) => image)\n  )\n  useMemo(() => images.forEach(texture => (texture.minFilter = LinearFilter)), [images])\n  const { contentMaxWidth: w, canvasWidth, canvasHeight, mobile } = useBlock()\n  return (\n    <>\n      <Block factor={1} offset={0}>\n        <Block factor={1.2}>\n          <Text left size={w * 0.12} position={[-w / 4.5, 2, -1]} color=\"#2FE8C3\" href=\"google.com\">\n            ARG\n          </Text>\n        </Block>\n        <Block factor={1.0}>\n        <Dom position={[-w / 2.9, -w * 0.08 + 1.05, -1]}>Мы выступаем в качестве{mobile ? <br /> : \" \"}независимой онлайн галереи в{mobile ? <br /> : \"  \"}формате дополненной реальности</Dom>\n        </Block>\n      </Block>\n      <Block factor={1.1} offset={5.4}>\n        <MultilineText top left size={w * 0.08} lineHeight={w / 9} position={[-w / 3.5, 7.8, -1]} color=\"#2fe8c3\" text={\"now\\ntake a\\nbreak\\nand\\ncontact\\nus\"} />\n      </Block>\n      {state.paragraphs.map((props, index) => (\n        <Paragraph key={index} index={index} {...props} image={images[index]} />\n      ))}\n      {state.stripes.map(({ offset, color, height }, index) => (\n        <Block key={index} factor={-1.5} offset={offset}>\n          <Plane args={[50, height, 32, 32]} shift={-4} color={color} rotation={[0, 0, Math.PI / 8]} position={[0, 0, -10]} />\n        </Block>\n      ))}\n      <Block factor={1} offset={5.6}>\n        <Dom className=\"bottom-left\" position={[-canvasWidth / 2, -canvasHeight / 2, 0]}>\n          ARG agency rights reserved\n        </Dom>\n      </Block>\n    </>\n  )\n}\n\nfunction App() {\n  const scrollArea = useRef()\n  const onScroll = e => (state.top.current = e.target.scrollTop)\n  useEffect(() => void onScroll({ target: scrollArea.current }), [])\n  return (\n    <>\n      <Canvas concurrent pixelRatio={1} orthographic camera={{ zoom: state.zoom, position: [0, 0, 500] }}>\n        \n        <Suspense fallback={<Dom center className=\"loading\" children=\"Loading...\" />}>\n          \n          <Content />\n          <Diamonds />\n          <Startup />\n        </Suspense>\n      </Canvas>\n      <div className=\"scrollArea\" ref={scrollArea} onScroll={onScroll}>\n\n      <video\n            autoPlay\n            loop\n            muted\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              left: \"50%\",\n              top: \"50%\",\n              height: \"100%\",\n              objectFit: \"cover\",\n              transform: \"translate(-50%, -50%)\",\n              zIndex: \"-1\",\n              opacity: \"0.3\",\n              transition: \"opacity, 2s ease-in-out\"\n            }}\n          >\n            <source src={Powerslap} type=\"video/mp4\"/>\n          </video>\n          <h2 id=\"we\">We also support WEB AR</h2>\n          <Iframe \n          className=\"ifr\" url=\"https://www.vectary.com/viewer/v1/?model=8ceb6b72-ab98-4c36-a6d4-cb1410361c1d&env=studio3\"\n        id=\"myId\"  \n        allowFullScreen/>\n          <a id=\"appstore\"\n           href=\"https://apps.apple.com/ru/app/a-l-e-s-h-a/id1512440083\">AppStore</a>\n          <a id=\"playstore\" \n          href=\"https://play.google.com/store/apps/details?id=com.ARG.AleshaAR\">GooglePlay</a>\n          <a id=\"telegram\"\n          href=\"https://telegram.org/#/im?p=@Russell_Evs\">Contact\n          </a>\n          \n        {new Array(state.sections).fill().map((_, index) => (\n          <div key={index} id={\"0\" + index} style={{ height: `${(state.pages / state.sections) * 100}vh` }} />\n        ))}\n      </div>\n      <nav className=\"pc\">\n        <ul>\n          <li><a className=\"pc__link\" href=\"#00\" children=\"ARG\" /></li>\n          <li><a className=\"pc__link\" href=\"#01\" children=\"01\" /></li>\n          <li><a className=\"pc__link\" href=\"#02\" children=\"02\" /></li>\n          <li><a className=\"pc__link\" href=\"#03\" children=\"03\" /></li>\n          <li><a className=\"pc__link\" href=\"#04\" children=\"04\" /></li>\n          <li><a className=\"pc__link\" href=\"#05\" children=\"05\" /></li>\n        </ul>\n      </nav>\n      <div className=\"frame__nav\">\n          <a className=\"frame__link\" href=\"#00\" children=\"ARG\" />\n          <a className=\"frame__link\" href=\"#01\" children=\"01\" />\n          <a className=\"frame__link\" href=\"#02\" children=\"02\" />\n          <a className=\"frame__link\" href=\"#03\" children=\"03\" />\n          <a className=\"frame__link\" href=\"#04\" children=\"04\" />\n          <a className=\"frame__link\" href=\"#05\" children=\"contact\" />\n        </div>\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}